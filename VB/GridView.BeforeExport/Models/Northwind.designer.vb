Imports System
Imports System.ComponentModel
Imports System.Linq.Expressions
Imports System.Linq
Imports System.Reflection
Imports System.Collections.Generic
Imports System.Data
Imports System.Data.Linq.Mapping
Imports System.Data.Linq

#Disable Warning 1591
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Namespace DevExpress.Razor.Models


    Partial Public Class NorthwindDataContext
        Inherits System.Data.Linq.DataContext

        Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    #End Region

        Public Sub New()
            MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NorthwindConnectionString").ConnectionString, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As String)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As System.Data.IDbConnection)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public ReadOnly Property Employees() As System.Data.Linq.Table(Of Employee)
            Get
                Return Me.GetTable(Of Employee)()
            End Get
        End Property
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Employees")> _
    Partial Public Class Employee

        Private _EmployeeID As Integer

        Private _LastName As String

        Private _FirstName As String

        Private _Title As String

        Private _TitleOfCourtesy As String

        Private _BirthDate? As Date

        Private _HireDate? As Date

        Private _Address As String

        Private _City As String

        Private _Region As String

        Private _PostalCode As String

        Private _Country As String

        Private _HomePhone As String

        Private _Extension As String

        Private _Photo As System.Data.Linq.Binary

        Private _Notes As String

        Private _ReportsTo? As Integer

        Private _PhotoPath As String

        Public Sub New()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeID", DbType:="Int NOT NULL")> _
        Public Property EmployeeID() As Integer
            Get
                Return Me._EmployeeID
            End Get
            Set(ByVal value As Integer)
                If (Me._EmployeeID <> value) Then
                    Me._EmployeeID = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", CanBeNull:=False)> _
        Public Property LastName() As String
            Get
                Return Me._LastName
            End Get
            Set(ByVal value As String)
                If (Me._LastName <> value) Then
                    Me._LastName = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(10) NOT NULL", CanBeNull:=False)> _
        Public Property FirstName() As String
            Get
                Return Me._FirstName
            End Get
            Set(ByVal value As String)
                If (Me._FirstName <> value) Then
                    Me._FirstName = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(30)")> _
        Public Property Title() As String
            Get
                Return Me._Title
            End Get
            Set(ByVal value As String)
                If (Me._Title <> value) Then
                    Me._Title = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TitleOfCourtesy", DbType:="NVarChar(25)")> _
        Public Property TitleOfCourtesy() As String
            Get
                Return Me._TitleOfCourtesy
            End Get
            Set(ByVal value As String)
                If (Me._TitleOfCourtesy <> value) Then
                    Me._TitleOfCourtesy = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDate", DbType:="DateTime")> _
        Public Property BirthDate() As Date?
            Get
                Return Me._BirthDate
            End Get
            Set(ByVal value? As Date)
                If (Not Me._BirthDate.Equals(value)) Then
                    Me._BirthDate = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HireDate", DbType:="DateTime")> _
        Public Property HireDate() As Date?
            Get
                Return Me._HireDate
            End Get
            Set(ByVal value? As Date)
                If (Not Me._HireDate.Equals(value)) Then
                    Me._HireDate = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(60)")> _
        Public Property Address() As String
            Get
                Return Me._Address
            End Get
            Set(ByVal value As String)
                If (Me._Address <> value) Then
                    Me._Address = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="NVarChar(15)")> _
        Public Property City() As String
            Get
                Return Me._City
            End Get
            Set(ByVal value As String)
                If (Me._City <> value) Then
                    Me._City = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(15)")> _
        Public Property Region() As String
            Get
                Return Me._Region
            End Get
            Set(ByVal value As String)
                If (Me._Region <> value) Then
                    Me._Region = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalCode", DbType:="NVarChar(10)")> _
        Public Property PostalCode() As String
            Get
                Return Me._PostalCode
            End Get
            Set(ByVal value As String)
                If (Me._PostalCode <> value) Then
                    Me._PostalCode = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NVarChar(15)")> _
        Public Property Country() As String
            Get
                Return Me._Country
            End Get
            Set(ByVal value As String)
                If (Me._Country <> value) Then
                    Me._Country = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomePhone", DbType:="NVarChar(24)")> _
        Public Property HomePhone() As String
            Get
                Return Me._HomePhone
            End Get
            Set(ByVal value As String)
                If (Me._HomePhone <> value) Then
                    Me._HomePhone = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension", DbType:="NVarChar(4)")> _
        Public Property Extension() As String
            Get
                Return Me._Extension
            End Get
            Set(ByVal value As String)
                If (Me._Extension <> value) Then
                    Me._Extension = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Photo", DbType:="Image", UpdateCheck:=UpdateCheck.Never)> _
        Public Property Photo() As System.Data.Linq.Binary
            Get
                Return Me._Photo
            End Get
            Set(ByVal value As System.Data.Linq.Binary)
                If (Me._Photo IsNot value) Then
                    Me._Photo = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Notes", DbType:="NText", UpdateCheck:=UpdateCheck.Never)> _
        Public Property Notes() As String
            Get
                Return Me._Notes
            End Get
            Set(ByVal value As String)
                If (Me._Notes <> value) Then
                    Me._Notes = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReportsTo", DbType:="Int")> _
        Public Property ReportsTo() As Integer?
            Get
                Return Me._ReportsTo
            End Get
            Set(ByVal value? As Integer)
                If (Not Me._ReportsTo.Equals(value)) Then
                    Me._ReportsTo = value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoPath", DbType:="NVarChar(255)")> _
        Public Property PhotoPath() As String
            Get
                Return Me._PhotoPath
            End Get
            Set(ByVal value As String)
                If (Me._PhotoPath <> value) Then
                    Me._PhotoPath = value
                End If
            End Set
        End Property
    End Class
End Namespace
#Enable Warning 1591
